name: Release
permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  update_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.email "translation-file-watcher@example.com"
          git config --global user.name "Translation File Watcher"

      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/src/*.ts') }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build and Package Extension
        run: |
          # Build and package your extension into a VSIX file
          npm run package

      - name: Upload Changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: CHANGELOG.md

      - name: Upload License
        uses: actions/upload-artifact@v2
        with:
          name: license
          path: LICENSE

      - name: Move to Release Branch
        run: |
          # Move to the release branch
          # git fetch origin release main
          git fetch origin release main
          git checkout release --force

      - name: Download Changelog
        uses: actions/download-artifact@v2
        with:
          name: changelog

      - name: Download License
        uses: actions/download-artifact@v2
        with:
          name: license

      - name: List and Sort .vsix files
        run: |
          ls -1 translation-file-watcher-*.vsix | sort -V > sorted_vsix_files.txt
          echo "Sorted .vsix files:"
          cat sorted_vsix_files.txt

      - name: Determine versions to keep
        run: |
          tail -n 3 sorted_vsix_files.txt > vsix_files_to_keep.txt
          echo "Files to keep:"
          cat vsix_files_to_keep.txt

      - name: Remove old .vsix files
        run: |
          file_count=$(wc -l < sorted_vsix_files.txt)
          if [ "$file_count" -gt 3 ]; then
            cat sorted_vsix_files.txt | while read line; do
              if ! grep -Fxq "$line" vsix_files_to_keep.txt; then
                rm "$line"
                git add "$line"
                echo "Removing $line"
              fi
            done
          else
            echo "There are 3 or fewer .vsix files. No files will be removed."
          fi

      - name: Get latest version
        id: version
        run: |
          latest_version=$(tail -n 1 sorted_vsix_files.txt | sed 's/.*-\([0-9]\+\.[0-9]\+\.[0-9]\+\)\.vsix/\1/')
          echo "version=$latest_version" >> $GITHUB_OUTPUT
          echo "Latest version: $latest_version"

      - name: Commit and Push Changes
        run: |
          version=$(echo "${{ steps.version.outputs.version }}")
          git add '*.vsix' 'LICENSE' 'CHANGELOG.md'
          git commit -m "chore(release): release version $version" -a
          git push origin release

          # Switch back to the main branch
          git checkout main
