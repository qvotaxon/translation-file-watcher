{
  "name": "translation-file-watcher",
  "displayName": "Translation File Watcher",
  "description": "Watches for translation file changes to automatically perform file conversions.",
  "publisher": "qvotaxon",
  "repository": {
    "type": "git",
    "url": "https://github.com/qvotaxon/translation-file-watcher"
  },
  "version": "1.15.0",
  "configurationVersion": "0.0.5",
  "engines": {
    "vscode": "^1.86.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "id": "paths",
        "title": "File Paths",
        "properties": {
          "translationFileWatcher.filePaths.packageJsonRelativePath": {
            "type": "string",
            "description": "Relative path to the project's package.json file. This location serves as the root for all other commands and configurations."
          },
          "translationFileWatcher.filePaths.localesRelativePath": {
            "type": "string",
            "description": "Relative path to the project's localization directory (the parent directory containing *.po and *.json files)."
          }
        }
      },
      {
        "id": "fileGeneration",
        "title": "File Generation",
        "properties": {
          "translationFileWatcher.fileGeneration.generatePo": {
            "type": "boolean",
            "default": true,
            "description": "Enable / disable generation of .po files from .json files. Useful for projects not requiring .po files."
          }
        }
      },
      {
        "id": "translations",
        "title": "DeepL API",
        "properties": {
          "translationFileWatcher.translations.deeplApiKey": {
            "type": "string",
            "default": "",
            "description": "Your deepLApiKey."
          },
          "translationFileWatcher.translations.deeplFormality": {
            "type": "string",
            "default": "default",
            "enum": [
              "default",
              "more",
              "less",
              "prefer_more",
              "prefer_less"
            ],
            "enumDescriptions": [
              "The DeepL default",
              "For a more formal language",
              "For a more informal language",
              "For a more formal language if available, otherwise fallback to default formality",
              "For a more informal language if available, otherwise fallback to default formality"
            ],
            "description": "Specify the formality preference for translations."
          },
          "translationFileWatcher.translations.deeplPreserveFormatting": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Preserve formatting in translations. This will prevent DeepL from changing the formatting of the translation. This is useful for translations that contain code or other formatting that should not be changed."
          },
          "translationFileWatcher.translations.autoGenerateMissingTranslations": {
            "type": "boolean",
            "default": false,
            "description": "Automatically generate missing translations in i18n files when a new translation value is saved in any i18n file."
          }
        }
      },
      {
        "id": "fileModes",
        "title": "File Modes",
        "properties": {
          "translationFileWatcher.fileModes.poFileMode": {
            "type": "string",
            "default": "automatic",
            "enum": [
              "manual",
              "automatic"
            ],
            "enumDescriptions": [
              "Manual",
              "Automatic"
            ],
            "description": "Choose the mode for .po files: Automatic will generate the PO When your Json File is changed. Manual generation is triggered by clicking icons on the status bar."
          },
          "translationFileWatcher.fileModes.jsonFileMode": {
            "type": "string",
            "default": "automatic",
            "enum": [
              "manual",
              "automatic"
            ],
            "enumDescriptions": [
              "Manual",
              "Automatic"
            ],
            "description": "Choose the mode for .Json files: Automatic will generate the Json When your PO File is changed. Manual generation is triggered by clicking icons on the status bar."
          },
          "translationFileWatcher.fileModes.codeFileMode": {
            "type": "string",
            "default": "automatic",
            "enum": [
              "manual",
              "automatic"
            ],
            "enumDescriptions": [
              "Manual",
              "Automatic"
            ],
            "description": "Choose the mode for code files: automatic extraction of translation keys and updating of .json files using file watchers or manual extraction and update by clicking icons on the status bar."
          }
        }
      },
      {
        "id": "logging",
        "title": "Logging",
        "properties": {
          "translationFileWatcher.logging.enableVerboseLogging": {
            "type": "boolean",
            "default": false,
            "description": "Enable / disable verbose logging to the Output Panel."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "translation-file-watcher.toggleFileWatchers",
        "title": "Toggle File Watcher Master Lock",
        "shortTitle": "Toggle Translation File Watcher"
      },
      {
        "command": "extension.statusBarItemClicked",
        "title": "Status Bar Item Clicked"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "test-compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "prepackage": "standard-version",
    "package": "npx vsce package",
    "postpackage": "git push --follow-tags origin main",
    "prealpha-package": "standard-version --prerelease alpha --skip.changelog=true --skip.tag=true",
    "alpha-package": "npx vsce package",
    "transpile-node-modules": "npx babel node_modules/i18next-conv --out-dir node_modules/i18next-conv-dist",
    "precommit": "lint-staged",
    "disabled-postrelease": "npm run package && git push --follow-tags origin dev"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "dependencies": {
    "deepl-node": "^1.13.0",
    "gettext-converter": "^1.3.0",
    "gulp-sort": "^2.0.0",
    "i18next-scanner": "^4.4.0",
    "json-stable-stringify": "^1.1.1",
    "vinyl-fs": "^4.0.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.23.9",
    "@babel/core": "^7.23.9",
    "@babel/preset-env": "^7.23.9",
    "@commitlint/cli": "^19.2.0",
    "@commitlint/config-conventional": "^19.1.0",
    "@types/gulp-sort": "^2.0.4",
    "@types/json-stable-stringify": "^1.0.36",
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vinyl-fs": "^3.0.5",
    "@types/vscode": "^1.86.0",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9",
    "eslint": "^8.56.0",
    "husky": "^9.0.11",
    "i18n-extract": "^0.6.7",
    "standard-version": "^9.5.0",
    "typescript": "^5.3.3"
  }
}
